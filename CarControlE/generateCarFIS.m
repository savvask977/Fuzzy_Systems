function fis = generateCarFIS()

 fis = newfis('car');
    fis = addvar(fis, 'input', 'dh', [0, 1]);
    fis = addvar(fis, 'input', 'dv', [0, 1]);
    fis = addvar(fis, 'input', 'theta', [-180, 180]);
    fis = addvar(fis, 'output', 'dtheta', [-130, 130]);
    
    fis = addmf(fis,'input', 1, 'VS', 'trimf', [0 0 0.25]);
    fis = addmf(fis,'input', 1, 'S','trimf',[0 0.25 0.5]);
    fis = addmf(fis,'input', 1, 'M','trimf',[0.25 0.5 0.75]);
    fis = addmf(fis,'input', 1, 'L','trimf',[0.5 0.75 1]);
    fis = addmf(fis,'input', 1, 'VL','trimf',[0.75 1 1]);
    
    fis = addmf(fis,'input', 2, 'VS', 'trimf', [0 0 0.25]);
    fis = addmf(fis,'input', 2, 'S','trimf',[0 0.25 0.5]);
    fis = addmf(fis,'input', 2, 'M','trimf',[0.25 0.5 0.75]);
    fis = addmf(fis,'input', 2, 'L','trimf',[0.5 0.75 1]);
    fis = addmf(fis,'input', 2, 'VL','trimf',[0.75 1 1]);
    
    fis = addmf(fis,'input', 3, 'NL','trimf',[-180 -180 -90]);
    fis = addmf(fis,'input', 3, 'NS','trimf',[-180 -90 0]);
    fis = addmf(fis,'input', 3, 'ZE','trimf',[-90 0 90]);
    fis = addmf(fis,'input', 3, 'PS','trimf',[0 90 180]);  
    fis = addmf(fis,'input', 3, 'PL','trimf',[90 180 180]);
    
   
    fis = addmf(fis,'output', 1, 'NL','trimf',[-130 -130 -65]);
    fis = addmf(fis,'output', 1, 'NS','trimf',[-130 -65 0]);
    fis = addmf(fis,'output', 1, 'ZE','trimf',[-65 0 65]);
    fis = addmf(fis,'output', 1, 'PS','trimf',[0 65 130]); 
    fis = addmf(fis,'output', 1, 'PL','trimf',[65 130 130]);
    
    
    
    fis = setfis(fis,'defuzzMethod','coa');
    fis = setfis(fis, 'impMethod', 'prod');
      
    ruleList=[1 1 1 4 1 1; 1 2 1 4 1 1; 1 3 1 4 1 1; 1 4 1 4 1 1; 1 5 1 4 1 1; ...
              2 1 1 4 1 1; 2 2 1 4 1 1; 2 3 1 4 1 1; 2 4 1 4 1 1; 2 5 1 4 1 1; ...
              3 1 1 4 1 1; 3 2 1 4 1 1; 3 3 1 4 1 1; 3 4 1 4 1 1; 3 5 1 4 1 1; ...
              4 1 1 4 1 1; 4 2 1 4 1 1; 4 3 1 4 1 1; 4 4 1 4 1 1; 4 5 1 4 1 1; ...
              5 1 1 4 1 1; 5 2 1 4 1 1; 5 3 1 4 1 1; 5 4 1 4 1 1; 5 5 1 4 1 1; ...
              
              1 1 2 2 1 1; 1 2 2 2 1 1; 1 3 2 2 1 1; 1 4 2 2 1 1; 1 5 2 2 1 1; ...
              2 1 2 2 1 1; 2 2 2 2 1 1; 2 3 2 2 1 1; 2 4 2 2 1 1; 2 5 2 2 1 1; ...
              3 1 2 2 1 1; 3 2 2 2 1 1; 3 3 2 2 1 1; 3 4 2 2 1 1; 3 5 2 2 1 1; ...
              4 1 2 2 1 1; 4 2 2 2 1 1; 4 3 2 4 1 1; 4 4 2 4 1 1; 4 5 2 4 1 1; ...
              5 1 2 2 1 1; 5 2 2 2 1 1; 5 3 2 4 1 1; 5 4 2 4 1 1; 5 5 2 4 1 1; ...
              
              1 1 3 4 1 1; 1 2 3 4 1 1; 1 3 3 4 1 1; 1 4 3 4 1 1; 1 5 3 4 1 1; ...
              2 1 3 4 1 1; 2 2 3 4 1 1; 2 3 3 4 1 1; 2 4 3 4 1 1; 2 5 3 4 1 1; ...
              3 1 3 4 1 1; 3 2 3 4 1 1; 3 3 3 3 1 1; 3 4 3 3 1 1; 3 5 3 3 1 1; ...
              4 1 3 3 1 1; 4 2 3 4 1 1; 4 3 3 3 1 1; 4 4 3 3 1 1; 4 5 3 3 1 1; ...
              5 1 3 3 1 1; 5 2 3 4 1 1; 5 3 3 3 1 1; 5 4 3 3 1 1; 5 5 3 3 1 1; ...
              
              1 1 4 3 1 1; 1 2 4 3 1 1; 1 3 4 3 1 1; 1 4 4 3 1 1; 1 5 4 3 1 1; ...
              2 1 4 3 1 1; 2 2 4 3 1 1; 2 3 4 3 1 1; 2 4 4 3 1 1; 2 5 4 3 1 1; ...
              3 1 4 2 1 1; 3 2 4 2 1 1; 3 3 4 2 1 1; 3 4 4 2 1 1; 3 5 4 2 1 1; ...
              4 1 4 2 1 1; 4 2 4 2 1 1; 4 3 4 2 1 1; 4 4 4 2 1 1; 4 5 4 2 1 1; ...
              5 1 4 2 1 1; 5 2 4 2 1 1; 5 3 4 2 1 1; 5 4 4 2 1 1; 5 5 4 2 1 1; ...
              
              1 1 5 2 1 1; 1 2 5 2 1 1; 1 3 5 2 1 1; 1 4 5 2 1 1; 1 5 5 2 1 1; ...
              2 1 5 2 1 1; 2 2 5 2 1 1; 2 3 5 2 1 1; 2 4 5 2 1 1; 2 5 5 2 1 1; ...
              3 1 5 2 1 1; 3 2 5 2 1 1; 3 3 5 2 1 1; 3 4 5 2 1 1; 3 5 5 2 1 1; ...
              4 1 5 2 1 1; 4 2 5 2 1 1; 4 3 5 2 1 1; 4 4 5 2 1 1; 4 5 5 2 1 1; ...
              5 1 5 2 1 1; 5 2 5 2 1 1; 5 3 5 2 1 1; 5 4 5 2 1 1; 5 5 5 2 1 1;];
              
              
    
    fis = addrule(fis, ruleList);
end 














